AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  Serverlessapilambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Description: ''
      MemorySize: 500
      Timeout: 60
      Handler: lambda_handler.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Action:
                - dynamodb:*
                - dax:*
                - application-autoscaling:DeleteScalingPolicy
                - application-autoscaling:DeregisterScalableTarget
                - application-autoscaling:DescribeScalableTargets
                - application-autoscaling:DescribeScalingActivities
                - application-autoscaling:DescribeScalingPolicies
                - application-autoscaling:PutScalingPolicy
                - application-autoscaling:RegisterScalableTarget
                - cloudwatch:DeleteAlarms
                - cloudwatch:DescribeAlarmHistory
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - cloudwatch:GetMetricStatistics
                - cloudwatch:ListMetrics
                - cloudwatch:PutMetricAlarm
                - cloudwatch:GetMetricData
                - datapipeline:ActivatePipeline
                - datapipeline:CreatePipeline
                - datapipeline:DeletePipeline
                - datapipeline:DescribeObjects
                - datapipeline:DescribePipelines
                - datapipeline:GetPipelineDefinition
                - datapipeline:ListPipelines
                - datapipeline:PutPipelineDefinition
                - datapipeline:QueryObjects
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
                - iam:GetRole
                - iam:ListRoles
                - kms:DescribeKey
                - kms:ListAliases
                - sns:CreateTopic
                - sns:DeleteTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - sns:Unsubscribe
                - sns:SetTopicAttributes
                - lambda:CreateFunction
                - lambda:ListFunctions
                - lambda:ListEventSourceMappings
                - lambda:CreateEventSourceMapping
                - lambda:DeleteEventSourceMapping
                - lambda:GetFunctionConfiguration
                - lambda:DeleteFunction
                - resource-groups:ListGroups
                - resource-groups:ListGroupResources
                - resource-groups:GetGroup
                - resource-groups:GetGroupQuery
                - resource-groups:DeleteGroup
                - resource-groups:CreateGroup
                - tag:GetResources
                - kinesis:ListStreams
                - kinesis:DescribeStream
                - kinesis:DescribeStreamSummary
              Effect: Allow
              Resource: '*'
            - Action:
                - cloudwatch:GetInsightRuleReport
              Effect: Allow
              Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
            - Action:
                - iam:PassRole
              Effect: Allow
              Resource: '*'
              Condition:
                StringLike:
                  iam:PassedToService:
                    - application-autoscaling.amazonaws.com
                    - application-autoscaling.amazonaws.com.cn
                    - dax.amazonaws.com
            - Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:AWSServiceName:
                    - replication.dynamodb.amazonaws.com
                    - dax.amazonaws.com
                    - dynamodb.application-autoscaling.amazonaws.com
                    - contributorinsights.dynamodb.amazonaws.com
                    - kinesisreplication.dynamodb.amazonaws.com
            - Sid: CloudWatchFullAccessPermissions
              Effect: Allow
              Action:
                - application-autoscaling:DescribeScalingPolicies
                - autoscaling:DescribeAutoScalingGroups
                - autoscaling:DescribePolicies
                - cloudwatch:*
                - logs:*
                - sns:CreateTopic
                - sns:ListSubscriptions
                - sns:ListSubscriptionsByTopic
                - sns:ListTopics
                - sns:Subscribe
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - oam:ListSinks
                - rum:*
                - synthetics:*
                - xray:*
              Resource: '*'
            - Sid: CloudWatchApplicationSignalsServiceLinkedRolePermissions
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: arn:aws:iam::*:role/aws-service-role/application-signals.cloudwatch.amazonaws.com/AWSServiceRoleForCloudWatchApplicationSignals
              Condition:
                StringLike:
                  iam:AWSServiceName: application-signals.cloudwatch.amazonaws.com
            - Sid: EventsServicePermissions
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource: arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*
              Condition:
                StringLike:
                  iam:AWSServiceName: events.amazonaws.com
            - Sid: OAMReadPermissions
              Effect: Allow
              Action:
                - oam:ListAttachedLinks
              Resource: arn:aws:oam:*:*:sink/*
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref ProductInventory
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /health
            Method: GET
        Api2:
          Type: Api
          Properties:
            Path: /products
            Method: GET
        Api3:
          Type: Api
          Properties:
            Path: /product
            Method: GET
        Api4:
          Type: Api
          Properties:
            Path: /product
            Method: POST
        Api5:
          Type: Api
          Properties:
            Path: /product
            Method: DELETE
        Api6:
          Type: Api
          Properties:
            Path: /product
            Method: PATCH
  ProductInventory:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: ProductInventory
      PrimaryKey:
        Name: productId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2